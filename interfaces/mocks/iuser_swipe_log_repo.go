// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/dwiangraenihantik/go/src/github.com/dwiangraeni/dealls/interfaces/iuser_swipe_log_repo.go

// Package mock_interfaces is a generated GoMock package.
package mock_interfaces

import (
	context "context"
	reflect "reflect"

	model "github.com/dwiangraeni/dealls/model"
	gomock "github.com/golang/mock/gomock"
)

// MockIUserSwipeLogRepo is a mock of IUserSwipeLogRepo interface.
type MockIUserSwipeLogRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIUserSwipeLogRepoMockRecorder
}

// MockIUserSwipeLogRepoMockRecorder is the mock recorder for MockIUserSwipeLogRepo.
type MockIUserSwipeLogRepoMockRecorder struct {
	mock *MockIUserSwipeLogRepo
}

// NewMockIUserSwipeLogRepo creates a new mock instance.
func NewMockIUserSwipeLogRepo(ctrl *gomock.Controller) *MockIUserSwipeLogRepo {
	mock := &MockIUserSwipeLogRepo{ctrl: ctrl}
	mock.recorder = &MockIUserSwipeLogRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUserSwipeLogRepo) EXPECT() *MockIUserSwipeLogRepoMockRecorder {
	return m.recorder
}

// GetSwipeCountByAccountID mocks base method.
func (m *MockIUserSwipeLogRepo) GetSwipeCountByAccountID(ctx context.Context, accountMaskID string) (model.SwipeCountBaseModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSwipeCountByAccountID", ctx, accountMaskID)
	ret0, _ := ret[0].(model.SwipeCountBaseModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSwipeCountByAccountID indicates an expected call of GetSwipeCountByAccountID.
func (mr *MockIUserSwipeLogRepoMockRecorder) GetSwipeCountByAccountID(ctx, accountMaskID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSwipeCountByAccountID", reflect.TypeOf((*MockIUserSwipeLogRepo)(nil).GetSwipeCountByAccountID), ctx, accountMaskID)
}

// InsertUserSwipeLog mocks base method.
func (m *MockIUserSwipeLogRepo) InsertUserSwipeLog(ctx context.Context, req model.UserSwipeLogBaseModel) (model.UserSwipeLogBaseModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertUserSwipeLog", ctx, req)
	ret0, _ := ret[0].(model.UserSwipeLogBaseModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InsertUserSwipeLog indicates an expected call of InsertUserSwipeLog.
func (mr *MockIUserSwipeLogRepoMockRecorder) InsertUserSwipeLog(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertUserSwipeLog", reflect.TypeOf((*MockIUserSwipeLogRepo)(nil).InsertUserSwipeLog), ctx, req)
}
