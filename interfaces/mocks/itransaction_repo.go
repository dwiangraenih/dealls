// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/dwiangraenihantik/go/src/github.com/dwiangraeni/dealls/interfaces/itransaction_repo.go

// Package mock_interfaces is a generated GoMock package.
package mock_interfaces

import (
	context "context"
	sql "database/sql"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockITransactionRepo is a mock of ITransactionRepo interface.
type MockITransactionRepo struct {
	ctrl     *gomock.Controller
	recorder *MockITransactionRepoMockRecorder
}

// MockITransactionRepoMockRecorder is the mock recorder for MockITransactionRepo.
type MockITransactionRepoMockRecorder struct {
	mock *MockITransactionRepo
}

// NewMockITransactionRepo creates a new mock instance.
func NewMockITransactionRepo(ctrl *gomock.Controller) *MockITransactionRepo {
	mock := &MockITransactionRepo{ctrl: ctrl}
	mock.recorder = &MockITransactionRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITransactionRepo) EXPECT() *MockITransactionRepoMockRecorder {
	return m.recorder
}

// BeginTrx mocks base method.
func (m *MockITransactionRepo) BeginTrx(ctx context.Context) (*sql.Tx, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BeginTrx", ctx)
	ret0, _ := ret[0].(*sql.Tx)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BeginTrx indicates an expected call of BeginTrx.
func (mr *MockITransactionRepoMockRecorder) BeginTrx(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BeginTrx", reflect.TypeOf((*MockITransactionRepo)(nil).BeginTrx), ctx)
}

// CommitTrx mocks base method.
func (m *MockITransactionRepo) CommitTrx(ctx context.Context, trx *sql.Tx) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CommitTrx", ctx, trx)
	ret0, _ := ret[0].(error)
	return ret0
}

// CommitTrx indicates an expected call of CommitTrx.
func (mr *MockITransactionRepoMockRecorder) CommitTrx(ctx, trx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CommitTrx", reflect.TypeOf((*MockITransactionRepo)(nil).CommitTrx), ctx, trx)
}

// RollbackTrx mocks base method.
func (m *MockITransactionRepo) RollbackTrx(ctx context.Context, trx *sql.Tx) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RollbackTrx", ctx, trx)
	ret0, _ := ret[0].(error)
	return ret0
}

// RollbackTrx indicates an expected call of RollbackTrx.
func (mr *MockITransactionRepoMockRecorder) RollbackTrx(ctx, trx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RollbackTrx", reflect.TypeOf((*MockITransactionRepo)(nil).RollbackTrx), ctx, trx)
}
